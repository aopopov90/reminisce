name: Build and deploy to CloudRun and CloudSQL

on:
  push:
    - 'main'
    - 'feature/**'

permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Git Version
        id: version
        uses: codacy/git-version@2.7.1

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ vars.WI_PROVIDER }}
          service_account: ${{ vars.GH_SA }}

      - name: Execute Liqubase
        env:
          version_liquibase: "4.23.0"
          version_cloud_sql_proxy: "2.4.0"
        run: |-
          set +e
          # start up cloud-sql-proxy
          curl -s -o cloud-sql-proxy https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/v${version_cloud_sql_proxy}/cloud-sql-proxy.linux.amd64
          chmod +x cloud-sql-proxy
          ./cloud-sql-proxy ${{ vars.DOCKER_REPO_REGION }}:${{ vars.CLOUD_SQL_REGION }}:reminisce --gcloud-auth --health-check --port 5433 &
          while true; do
            if [ "$(curl -s -w "%{http_code}" -o /dev/null "http://localhost:9090/readiness")" == "200" ]; then
              echo "cloud-sql-proxy is ready"
              break
            fi
            echo "Waiting for cloud-sql-proxy to be ready..."
            sleep 5
          done 
          # download liquibase
          curl -Ls -o liquibase.tar.gz https://github.com/liquibase/liquibase/releases/download/v${version_liquibase}/liquibase-${version_liquibase}.tar.gz
          tar -zxf liquibase.tar.gz && chmod +x liquibase
          # execute liquibase
          ./liquibase update --password ${{ secrets.PG_PASSWORD }}
          ./liquibase tag --tag ${{ steps.version.outputs.version }} --password ${{ secrets.PG_PASSWORD }}

      - name: Set-up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Build
        id: build
        run: |-
          ./gradlew test
          ./gradlew jib \
            --image ${{ vars.DOCKER_REPO_REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.DOCKER_REPO_NAME }}/${{ vars.DOCKER_IMAGE_NAME }}:${{ steps.version.outputs.version }}

      - name: Deploy to CloudRun
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: 'reminisce'
          image: ${{ vars.DOCKER_REPO_REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/reminisce/reminisce:${{ steps.version.outputs.version }}
          env_vars: |
            PG_PASSWORD=${{ secrets.PG_PASSWORD }}
            SPRING_PROFILES_ACTIVE=staging

      - name: 'Print CloudRun end-point'
        run: 'curl "${{ steps.deploy.outputs.url }}"'